# NOTE: https://docs.github.com/ja/actions/using-workflows/reusing-workflows
name: Kustomize set image & build workflow

on:
  workflow_call:
    secrets:
      token:
        description: |
          GitHub Token.
          If you create pull request to another repository,
          you might be better using GitHub App.
      app-id:
        description: "GitHub App ID"
      private-key:
        description: "GitHub App Private Key"
      docker-tag:
        description: "docker tag"
    inputs:
      updates-image:
        description: "whether to set image with kustomize"
        type: boolean
        default: false
      image-set-directory:
        description: "image set directory"
        type: string
        default: ""
      image-set-name:
        description: "target image name"
        type: string
        default: ""
      builds-yaml:
        description: "whether to build yaml with kustomize"
        type: boolean
        default: false
      input-build-directory:
        description: "build input directory"
        type: string
      output-build-filepath:
        description: "build output file name"
        type: string
      pushes-auto:
        description: |
          Whether to push automatically after kustmoize command.
          If false, create pull request alternatively.
        type: boolean
        default: false

jobs:
  kustomize-edit-pull-request:
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      pull-requests: "write"
    steps:
      #----------------------------------------------
      # set env TOKEN
      #----------------------------------------------
      # NOTE: https://github.com/marketplace/actions/action-github-app-token
      - name: Get GitHub App token
        id: get-github-app-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.app-id }}
          private_key: ${{ secrets.private-key }}
        continue-on-error: true

      - name: Set env token
        id: set-env-token
        run: |
          echo 'TOKEN=${{ steps.get-github-app-token.outputs.token  || secrets.token }}' >> $GITHUB_ENV

      #----------------------------------------------
      # check-out repo
      #----------------------------------------------
      - if: contains(fromJson('["push", "schedule", "workflow_dispatch", "repository_dispatch"]'), github.event_name)
        uses: actions/checkout@v3
        with:
          token: ${{ env.TOKEN }}

      - if: contains(fromJson('["pull_request"]'), github.event_name)
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ env.TOKEN }}

      #----------------------------------------------
      # install kustomize
      #----------------------------------------------
      - name: Install kustomize
        id: install-kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          echo "$HOME/kustomize" >> $GITHUB_PATH

      #----------------------------------------------
      # update image with kustomize
      #----------------------------------------------
      - name: Update image with kustomize
        id: update-image-with-kustomize
        if: ${{ inputs.updates-image }}
        working-directory: ${{ inputs.image-set-directory }}
        run: kustomize edit set image ${{ inputs.image-set-name }}=${{ secrets.docker-tag }}

      #----------------------------------------------
      # build yaml with kustomize
      #----------------------------------------------
      - name: Build yaml with kustomize
        id: build-yaml-with-kustomize
        if: ${{ inputs.builds-yaml }}
        run: kustomize build ${{ inputs.input-build-directory }} > ${{ inputs.output-build-filepath }}

      #----------------------------------------------
      # validate k8s yaml with kubeval
      # https://www.kubeval.com/installation/
      # https://github.com/instrumenta/kubeval/issues/301#issuecomment-1079674123
      #----------------------------------------------
      - name: Validate yaml with kubeval
        id: validate-yaml-with-kubeval
        if: ${{ inputs.builds-yaml }}
        run: |
          docker run --rm -i \
            -v `pwd`/${{ inputs.output-build-filepath }}:/${{ inputs.output-build-filepath }} \
            garethr/kubeval \
            --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master \
            --ignore-missing-schemas \
            /${{ inputs.output-build-filepath }}

      #----------------------------------------------
      # get git status to check diff
      #----------------------------------------------
      - name: Get git status
        id: get-git-status
        run: echo "::set-output name=status::$(git status -s)"

      #----------------------------------------------
      # push or create pull request
      #----------------------------------------------
      - name: Commit and push
        id: commit-and-push
        if: ${{ inputs.pushes-auto && steps.get-git-status.outputs.status }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add -u .
          git commit --author=. -m 'chore: kustmoize patch'
          git push

      - name: Create Pull request
        uses: peter-evans/create-pull-request@v4
        if: ${{ inputs.pushes-auto == false && steps.get-git-status.outputs.status != '' }}
        with:
          token: ${{ env.TOKEN }}
          commit-message: "chore: update image"
          author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          branch: "kustomize/patch"
          branch-suffix: "random"
          delete-branch: true
          title: "[kustomize] ${{ (inputs.updates-image && 'update image') || '' }}${{ (inputs.updates-image && inputs.builds-yaml  && ' & ') || '' }}${{ (inputs.builds-yaml && 'build yaml') || '' }}"
          body: |
            #### Update image: `${{ inputs.updates-image }}`

            - directory: `${{ inputs.image-set-directory }}` 
            - name: `${{ inputs.image-set-name }}` 
            - set tag: `${{ secrets.docker-tag }}`

            #### Build a set of KRM resources: `${{ inputs.builds-yaml }}`

            - build input: `${{ inputs.input-build-directory }}`
            - build output: `${{ inputs.output-build-filepath }}`

          labels: |
            kustomize
